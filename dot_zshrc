
############################################################################### Fig env variables
# Please make sure this block is at the start of this file.
[ -s ~/.fig/shell/pre.sh ] && source ~/.fig/shell/pre.sh
############################################################################### Global env variables
export LC_ALL=en_US.UTF-8 export LANG=en_US.UTF-8
export MANPATH="/usr/local/man:$MANPATH"
export ZSH="~/.oh-my-zsh"
export GPG_TTY=$(tty)
export SNYK_TOKEN="e6b840ab-0960-40a9-938c-b5316e4c88cf"
export DOCKER_BUILDKIT=1
export UPDATE_ZSH_DAYS=1
export GOPATH=~/dev/go

export PATH=$GOPATH/bin:/usr/local/go/bin:$PATH
export PATH=$HOME/bin:$PATH
export PATH=$HOME/.bin:$PATH
export PATH=$HOME/.pulumi/bin:$PATH
export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/.asdf/bin:$PATH
export PATH=$HOME/.arkade/bin/:$PATH
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
export PATH="~/dev/google-cloud-sdk/bin":$PATH

ZSH_THEME="agnoster"
DISABLE_UPDATE_PROMPT="true"
ENABLE_CORRECTION="false"
COMPLETION_WAITING_DOTS="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"
HIST_STAMPS="yyyy-mm-dd"
HOMEBREW_NO_ENV_HINTS=true
############################################################################### ZSH plugins
plugins=(
        git
        direnv
        kube-ps1
        golang
        vscode
        python
        docker
        fzf
        autojump
        asdf
        kubens
        kubectx
        tmuxinator
        command-not-found
        zsh-autosuggestions
)
############################################################################### Editor
# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
    export EDITOR='nvim'
else
    export EDITOR='nvim'
fi
############################################################################### Functions
batdiff() {
    git diff --name-only --diff-filter=d | xargs bat --diff
}

listening() {
    if [ $# -eq 0 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P
    elif [ $# -eq 1 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P | grep -i --color $1
    else
        echo "Usage: listening [pattern]"
    fi
}

############################################################################### Source statetments
if [ -f ~/$ZSH/oh-my-zsh.sh ]; then . '~/$ZSH/oh-my-zsh.sh'; fi
if [ -f ~/.aliases ]; then . '~/.aliases'; fi
if [ -f ~/.kubectl_aliases ]; then . '~/.kubectl_aliases'; fi
if [ -f $HOME/.asdf/asdf.sh ]; then . '$HOME/.asdf/asdf.sh'; fi
if [ -f "/opt/homebrew/opt/kube-ps1/share/kube-ps1.sh" ]; then . "/opt/homebrew/opt/kube-ps1/share/kube-ps1.sh"; fi
if [ -f '~/dev/google-cloud-sdk/path.zsh.inc' ]; then . '~/google-cloud-sdk/path.zsh.inc'; fi # # The next line updates PATH for the Google Cloud SDK.
if [ -f '~/dev/google-cloud-sdk/completion.zsh.inc' ]; then . '~/google-cloud-sdk/completion.zsh.inc'; fi # The next line enables shell command completion for gcloud.

if [ -x kube_ps1 ]; then PS1='$(kube_ps1)'$PS1; fi
if [ -x direnv ]; then eval "$(direnv hook zsh)"; fi
if [ -x starship ]; then "$(starship init zsh)"; fi # Starship prompt: https://starship.rs/
if [ -x devspace ]; then "source <(devspace completion zsh)"; fi # Devspace: https://devspace.cloud/

# autoload -U +X bashcompinit && bashcompinit
# complete -o nospace -C /usr/bin/terraform terraform
# complete -o nospace -C /usr/bin/terraform terraform-docs
# complete -o nospace -C /usr/bin/terraform terraform-docs-url
# complete -o nospace -C /usr/bin/terraform terraform-fmt
# complete -o nospace -C /usr/bin/terraform terraform-fmt-check
# complete -o nospace -C /usr/bin/terraform terraform-graph
# complete -o nospace -C /usr/bin/terraform terraform-import
# complete -o nospace -C /usr/bin/terraform terraform-init
# complete -o nospace -C /usr/bin/terraform terraform-plan
# complete -o nospace -C /usr/bin/terraform terraform-provider-registry
# complete -o nospace -C /usr/bin/terraform terraform-show
# complete -o nospace -C /usr/bin/terraform terraform-taint
# complete -o nospace -C /usr/bin/terraform terraform-validate


#### FIG ENV VARIABLES ####
# Please make sure this block is at the end of this file.
[ -s ~/.fig/fig.sh ] && source ~/.fig/fig.sh
#### END FIG ENV VARIABLES ####
